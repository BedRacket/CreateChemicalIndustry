buildscript {
    repositories {
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        maven { url = "https://maven.parchmentmc.org/" }
        maven { url "https://maven.tterrag.com/"}
        maven { url = "https://maven.minecraftforge.net/"}
        mavenCentral()
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath group: 'org.parchmentmc', name: 'librarian', version: '1.+', changing: true
    }
}

plugins {
    id "io.freefair.lombok" version "6.5.0.3"
    id 'net.minecraftforge.gradle' version '5.1.+'
}

apply plugin: 'org.spongepowered.mixin'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

version = project.mod_version
group = project.mod_group
archivesBaseName = project.archiveBaseName

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {

    mappings channel: 'parchment', version: "2022.11.06-1.18.2"

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', project.mod_id

            mods {
                create_chemical_industry {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', project.mod_id

            mods {
                create_chemical_industry {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'examplemod'

            mods {
                create_chemical_industry {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                create_chemical_industry {
                    source sourceSets.main
                }
            }
        }
    }
}

task mergeResources(type: Copy) {
    def generated = files("src/generated/resources")
    def resources = files("src/main/resources")

    from generated
    exclude(str -> {
        def file = file("src/main/resources/" + str.relativePath)
        return file.isFile() && !resources.contains(file)
    })
    into "$buildDir/resources/main"
}

compileJava.dependsOn mergeResources

repositories {
    maven {
        url "https://cursemaven.com"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.1.85'

    implementation 'org.projectlombok:lombok:1.18.24'
    implementation 'org.jetbrains:annotations:23.0.0'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    implementation fg.deobf('curse.maven:create-328085:4007544')
    implementation fg.deobf('curse.maven:flywheel-486392:3934664')
}

jar {
    exclude(".cache/**")
    exclude("org/bedracket/creatchemicalindustry/datagen/**")
    manifest {
        attributes([
                "Specification-Title"     : project.mod_id,
                "Specification-Vendor"    : project.mod_id + "sareus",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : project.mod_id + "sareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

mixin {
    add sourceSets.main, "create_chemical_industry.refmap.json"

    config "create_chemical_industry.mixins.json"
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
